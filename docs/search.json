[
  {
    "objectID": "HW5.html",
    "href": "HW5.html",
    "title": "HW5",
    "section": "",
    "text": "Read in the data from a local file source and combine the two data frames\n\nd1 &lt;- read.table(\"student-mat.csv\",sep=\";\",header=TRUE)\nd2 &lt;- read.table(\"student-por.csv\",sep=\";\",header=TRUE)\n\nmerge_cols &lt;- c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\n                \"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\n                \"internet\")\n\ntheir_way &lt;- merge(d1, d2, \n                   by = merge_cols)\n\nprint(nrow(their_way)) # 382 students\n\n[1] 382\n\n\nRead in and combine the data using functions from the tidyverse. Use an inner_join() on the variables they used in their code\n\nlibrary(tidyverse)\n\nmat_data &lt;- read_csv2(\"student-mat.csv\", col_names = TRUE)\npor_data &lt;- read_csv2(\"student-por.csv\", col_names = TRUE)\n\nusing_inner_join &lt;- inner_join(mat_data, por_data, by = merge_cols)\n\nWarning in inner_join(mat_data, por_data, by = merge_cols): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 79 of `x` matches multiple rows in `y`.\nℹ Row 79 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nprint(nrow(using_inner_join))\n\n[1] 382\n\n\nUse an inner_join() on all variables other than G1, G2, G3, paid, and absences\n\nall_cols &lt;- colnames(mat_data)\nmerge_cols &lt;- setdiff(all_cols, \n                      c(\"G1\", \"G2\", \"G3\", \"paid\", \"absences\"))\n\ncombined_data &lt;- inner_join(mat_data, por_data, by = merge_cols)\n\nprint(nrow(combined_data))\n\n[1] 320\n\n\nFor the math data, Portuguese, and combined data, choose four categorical variables you are interested in and convert those into factor variables in each tibble. Use Mutate()\n\ncoerce_interested_factors &lt;- function(data) {\n  data |&gt;\n    mutate(reason = factor(reason),\n           studytime = factor(studytime),\n           romantic = factor(romantic),\n           schoolsup = factor(schoolsup))\n}\n\nmat_data &lt;- coerce_interested_factors(mat_data)\npor_data &lt;- coerce_interested_factors(por_data)\ncombined_data &lt;- coerce_interested_factors(combined_data)"
  },
  {
    "objectID": "HW5.html#categorical-variables",
    "href": "HW5.html#categorical-variables",
    "title": "HW5",
    "section": "Categorical Variables",
    "text": "Categorical Variables\nCreate a one-way contingency table, a two-way contingency table, and a three-way contingency table for some of the factor variables you created previously. Use table() to accomplish this.\n– Interpret a number from each resulting table (that is, pick out a value produced and explain what that value means.)\n\none_way_table &lt;- table(combined_data$reason)\none_way_table\n\n\n    course       home      other reputation \n       118         87         30         85 \n\n\n85 students claimed reputation as their reason to choose this school\n\ntwo_way_table &lt;- table(combined_data$reason, \n                       combined_data$studytime)\ntwo_way_table\n\n            \n              1  2  3  4\n  course     34 53 23  8\n  home       23 47 14  3\n  other      13 11  6  0\n  reputation 11 46 13 15\n\n\n46 students who claimed reputation as their reason for the school, spend 2 to 5 hours per week studying\n\nthree_way_table &lt;- table(combined_data$reason, \n                         combined_data$studytime, \n                         combined_data$romantic)\nthree_way_table\n\n, ,  = no\n\n            \n              1  2  3  4\n  course     26 37 15  7\n  home       18 30  8  2\n  other       8  5  2  0\n  reputation  9 33  9 12\n\n, ,  = yes\n\n            \n              1  2  3  4\n  course      8 16  8  1\n  home        5 17  6  1\n  other       5  6  4  0\n  reputation  2 13  4  3\n\n\n33 students who are not in a romantic relationship choose their school based on reputation and study for 2 to 5 hours per week\n\nCreate a conditional two-way table using table().\nSubsetting the data and then creating the two-way table\n\nsubset_data &lt;- combined_data |&gt; filter(studytime == 2)\n\ncond_table_subset &lt;- table(subset_data$reason, subset_data$romantic)\n\ncond_table_subset\n\n            \n             no yes\n  course     37  16\n  home       30  17\n  other       5   6\n  reputation 33  13\n\n\ncreating a three-way table and subsetting it\n\nthree_way_table[, \"2\", ]\n\n            \n             no yes\n  course     37  16\n  home       30  17\n  other       5   6\n  reputation 33  13\n\n\nCreate a two-way contingency table using group_by() and summarize() from dplyr. Then use pivot_wider() to make the result look more like the output from table().\n\ngrouped_table &lt;- combined_data |&gt;\n  group_by(reason, studytime) |&gt;\n  summarize(count = n())\n\n`summarise()` has grouped output by 'reason'. You can override using the\n`.groups` argument.\n\ngrouped_table |&gt;\n  pivot_wider(names_from = studytime, \n              values_from = count, \n              values_fill = 0)\n\n# A tibble: 4 × 5\n# Groups:   reason [4]\n  reason       `1`   `2`   `3`   `4`\n  &lt;fct&gt;      &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1 course        34    53    23     8\n2 home          23    47    14     3\n3 other         13    11     6     0\n4 reputation    11    46    13    15\n\n\nCreate a stacked bar graph and a side-by-side bar graph. Give relevant x and y labels, and a title for the plots.\n\nggplot(grouped_table, \n       aes(x = reason, y = count, fill = studytime)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  labs(title = \"Reason & Studytime\",\n       x = \"Reason\",\n       y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nFrom this view we can more easily see the counts for each reason aggregated across the studytimes.\n\nggplot(grouped_table, \n       aes(x = reason, y = count, fill = studytime)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  labs(title = \"Reason & Studytime\",\n       x = \"Reason\",\n       y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nIn contrast to the stacked bar chart, here we lose some notion of the aggregated totals between each reason, but we can better understand how studytimes compare within a given reason. We can also more readily compare the magnitudes of studytimes across reasons as well."
  },
  {
    "objectID": "HW5.html#numeric-variables",
    "href": "HW5.html#numeric-variables",
    "title": "HW5",
    "section": "Numeric Variables",
    "text": "Numeric Variables\nage, absences, and the three test grades variables (G1, G2, and G3)\nFind measures of center and spread for three of these variables (including at least one G3 variable)\n\nsummarize_numeric_vars &lt;- function(data) {\n  data |&gt;\n    summarize(\n      mean_age = mean(age, na.rm = TRUE),\n      median_age = median(age, na.rm = TRUE),\n      sd_age = sd(age, na.rm = TRUE),\n      mean_absences_mat = mean(absences.x, na.rm = TRUE),\n      median_absences_mat = median(absences.x, na.rm = TRUE),\n      sd_absences_mat = sd(absences.x, na.rm = TRUE),\n      mean_G3_mat = mean(G3.x, na.rm = TRUE), \n      median_G3_mat = median(G3.x, na.rm = TRUE),\n      sd_G3_mat = sd(G3.x, na.rm = TRUE)\n    )\n}\n\n\nnum_summary &lt;- combined_data |&gt;\n  summarize_numeric_vars()\n\nnum_summary \n\n# A tibble: 1 × 9\n  mean_age median_age sd_age mean_absences_mat median_absences_mat\n     &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;             &lt;dbl&gt;               &lt;dbl&gt;\n1     16.5         16   1.14              5.41                   4\n# ℹ 4 more variables: sd_absences_mat &lt;dbl&gt;, mean_G3_mat &lt;dbl&gt;,\n#   median_G3_mat &lt;dbl&gt;, sd_G3_mat &lt;dbl&gt;\n\n\nRepeat while subsetting the data in a meaningful way.\nSummary for students studying more than 5 hours per week\n\nnum_summary_studiers &lt;- combined_data |&gt;\n  filter(as.numeric(studytime) &gt;= 3) |&gt;\n  summarize_numeric_vars()\n\nnum_summary_studiers \n\n# A tibble: 1 × 9\n  mean_age median_age sd_age mean_absences_mat median_absences_mat\n     &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;             &lt;dbl&gt;               &lt;dbl&gt;\n1     16.7         17   1.20              3.94                 3.5\n# ℹ 4 more variables: sd_absences_mat &lt;dbl&gt;, mean_G3_mat &lt;dbl&gt;,\n#   median_G3_mat &lt;dbl&gt;, sd_G3_mat &lt;dbl&gt;\n\n\nFind measures of center and spread across a single grouping variable for three of these variables (including a G3 variable as one of them)\n\ngrouped_romantic_summary &lt;- combined_data |&gt;\n  group_by(romantic) |&gt;\n  summarize_numeric_vars()\n\ngrouped_romantic_summary\n\n# A tibble: 2 × 10\n  romantic mean_age median_age sd_age mean_absences_mat median_absences_mat\n  &lt;fct&gt;       &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;             &lt;dbl&gt;               &lt;dbl&gt;\n1 no           16.4         16   1.11              4.67                   3\n2 yes          16.8         17   1.15              7.07                   4\n# ℹ 4 more variables: sd_absences_mat &lt;dbl&gt;, mean_G3_mat &lt;dbl&gt;,\n#   median_G3_mat &lt;dbl&gt;, sd_G3_mat &lt;dbl&gt;\n\n\nFind measures of center and spread across two grouping variables for three of these variables (including a G3 variable as one of them)\n\ngrouped_summary_romantic_studytime &lt;- combined_data |&gt;\n  group_by(romantic, studytime) |&gt;\n  summarize_numeric_vars()\n\n`summarise()` has grouped output by 'romantic'. You can override using the\n`.groups` argument.\n\ngrouped_summary_romantic_studytime\n\n# A tibble: 8 × 11\n# Groups:   romantic [2]\n  romantic studytime mean_age median_age sd_age mean_absences_mat\n  &lt;fct&gt;    &lt;fct&gt;        &lt;dbl&gt;      &lt;dbl&gt;  &lt;dbl&gt;             &lt;dbl&gt;\n1 no       1             16.3         16  1.05               5.39\n2 no       2             16.3         16  1.06               4.81\n3 no       3             16.8         17  1.17               3   \n4 no       4             16.4         16  1.36               4.57\n5 yes      1             17.0         17  1.61               6.8 \n6 yes      2             16.8         17  0.985              8.44\n7 yes      3             16.8         17  1.05               5.05\n8 yes      4             16.2         16  1.30               2.8 \n# ℹ 5 more variables: median_absences_mat &lt;dbl&gt;, sd_absences_mat &lt;dbl&gt;,\n#   mean_G3_mat &lt;dbl&gt;, median_G3_mat &lt;dbl&gt;, sd_G3_mat &lt;dbl&gt;\n\n\nCreate a correlation matrix between all of the numeric variables\n\nnumeric_vars &lt;- combined_data |&gt;\n  select(age, absences.x, G1.x, G2.x, G3.x, absences.y, G1.y, G2.y, G3.y)\n\ncorrelation_matrix &lt;- numeric_vars |&gt; \n  cor(use = \"pairwise.complete.obs\")\n\ncorrelation_matrix\n\n                    age  absences.x        G1.x        G2.x        G3.x\nage         1.000000000  0.14392517 -0.11037935 -0.18618740 -0.20603186\nabsences.x  0.143925170  1.00000000 -0.06946116 -0.07580245 -0.02811847\nG1.x       -0.110379348 -0.06946116  1.00000000  0.86588796  0.81859418\nG2.x       -0.186187399 -0.07580245  0.86588796  1.00000000  0.91357599\nG3.x       -0.206031862 -0.02811847  0.81859418  0.91357599  1.00000000\nabsences.y  0.047331821  0.56381559 -0.08760610 -0.12636236 -0.11664046\nG1.y       -0.050549678 -0.09247761  0.59293522  0.54300736  0.52288461\nG2.y        0.029366456 -0.14516402  0.59517224  0.56521350  0.54545279\nG3.y       -0.009103257 -0.13572638  0.54388734  0.49603265  0.47595650\n            absences.y        G1.y        G2.y         G3.y\nage         0.04733182 -0.05054968  0.02936646 -0.009103257\nabsences.x  0.56381559 -0.09247761 -0.14516402 -0.135726385\nG1.x       -0.08760610  0.59293522  0.59517224  0.543887345\nG2.x       -0.12636236  0.54300736  0.56521350  0.496032649\nG3.x       -0.11664046  0.52288461  0.54545279  0.475956497\nabsences.y  1.00000000 -0.09864117 -0.12070727 -0.071452010\nG1.y       -0.09864117  1.00000000  0.88415041  0.825414320\nG2.y       -0.12070727  0.88415041  1.00000000  0.894309821\nG3.y       -0.07145201  0.82541432  0.89430982  1.000000000\n\n\nCreate a histogram, kernel density plot, and boxplot for two of the numeric variables across one of the categorical variables (that is, create graphs that can compare the distributions across the groups on the same plot (no faceting here)). Add appropriate labels and titles\n\nggplot(combined_data, \n       aes(x = G3.x, fill = romantic)) +\n  geom_histogram(position = \"dodge\", binwidth = 1) +\n  labs(title = \"G3 (Math) & Romantic Relationship\",\n       x = \"G3 (Math)\",\n       y = \"Count\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nggplot(combined_data, \n       aes(x = G3.x, fill = romantic)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"G3 (Math) & Romantic Relationship\",\n       x = \"G3 (Math)\",\n       y = \"Density\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nggplot(combined_data, \n       aes(x = romantic, y = age, fill = romantic)) +\n  geom_boxplot() +\n  labs(title = \"Age & Romantic Relationship\",\n       x = \"Romantic Relationship\",\n       y = \"Age\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nCreate two scatterplots relating a G3 variable to other numeric variables (put G3 on the y-axis). You should jitter the points if they sit on top of each other. Color the points by a categorical variable in each. Add appropriate labels and titles.\n\nggplot(combined_data, \n       aes(x = G3.x, y = age, color = romantic)) +\n  geom_jitter() +\n  labs(title = \"Age vs G3 (Math)\",\n       x = \"G3 (Math Grade)\",\n       y = \"Age\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nWill likely need to investigate the many zero’s that appear in the G3 scores for legitimacy\n\nggplot(combined_data, \n       aes(x = G3.x, y = absences.x, color = studytime)) +\n  geom_jitter() +\n  labs(title = \"Absences vs G3 (Math)\",\n       x = \"G3 (Math)\",\n       y = \"Absences (Math)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nRepeat the scatter plot step but use faceting to obtain graphs at each setting of another categorical variable\n\nggplot(combined_data, \n       aes(x = G3.x, y = age)) +\n  geom_jitter(\n    aes(color = romantic)) +\n  facet_wrap(~ romantic) +\n  labs(title = \"Age vs G3 (Math) by Romantic Relationship\",\n       x = \"G3 (Math)\",\n       y = \"Age\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nggplot(combined_data, \n       aes(x = G3.x, y = absences.x)) +\n  geom_jitter(\n    aes(color = studytime)) +\n  facet_wrap(~ studytime) +\n  labs(title = \"Absences vs G3 (Math) by Studytime\",\n       x = \"G3 (Math)\",\n       y = \"Absences (Math)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nRepeat the scatter plot step but use faceting to obtain graphs at each combination of two categorical variables.\n\nggplot(combined_data, \n       aes(x = G3.x, y = age)) +\n  geom_jitter(\n    aes(color = romantic)) +\n  facet_grid(romantic ~ studytime) +  \n  labs(title = \"Age vs G3 (Math) by Romantic and Studytime\",\n       x = \"G3 (Math)\",\n       y = \"Age\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nggplot(combined_data, \n       aes(x = G3.x, y = absences.x)) +\n  geom_jitter(\n    aes(color = studytime)) +\n  facet_grid(romantic ~ studytime) +  \n  labs(title = \"Absences vs G3 (Math) by Romantic and Studytime\",\n       x = \"G3 (Math)\",\n       y = \"Absences (Math)\") +\n  theme_minimal()"
  }
]